services:
  app:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    stdin_open: true  # make sure u can actually interact with it
    tty: true         
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=userdb
      - DB_TIMEZONE=America/Chicago
      - DB_SSLMODE=disable

    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy  # wait for postgres DB to be ready
    networks:
      - user_network
    volumes:
      - .:/app

  postgres:
    build:
      context: ./docker/postgres
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=userdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data # persistent volume
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql # init data
    networks:
      - user_network
    healthcheck: 
      test: ["CMD-SHELL", "pg_isready -U user -d userdb"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  user_network:
    driver: bridge

volumes:
  postgres_data: